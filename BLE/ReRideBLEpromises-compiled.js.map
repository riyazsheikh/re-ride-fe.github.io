{"version":3,"sources":["ReRideBLEpromises.js"],"names":[],"mappings":";;AAAA;;;;AAMA,IAAM,cAAc,iBAApB;AACA,IAAM,qBAAoB,eAA1B;AACA,IAAM,aAAa,QAAnB;;AAEA,IAAI,gBAAJ;AACA,IAAI,KAAJ;;AAEA,SAAS,SAAT,GACA;AACI,YAAQ,IAAI,QAAJ,CAAa;AACjB,YAAI,OADa;AAEjB,eAAO,CAFU;AAGjB,aAAK,CAHY;AAIjB,aAAK,GAJY;AAKjB,eAAO;AALU,KAAb,CAAR;AAOH;;AAED,SAAS,QAAT,CAAkB,YAAlB,EACA;AACI,UAAM,OAAN,CAAc,YAAd;AACH;;AAED,SAAS,kBAAT,GAA8B;;AAE1B,QAAI,gCAAJ;AACA,cAAU,SAAV,CAAoB,aAApB,CAAkC,EAAC,SAAS,CAAC,EAAC,MAAM,UAAP,EAAD,CAAV,EAAgC,kBAAiB,CAAC,WAAD,CAAjD,EAAlC,EACK,IADL,CACU,kBAAU;AACZ,YAAI,8BAAJ;AACA,eAAO,OAAO,IAAP,CAAY,OAAZ,EAAP;AACH,KAJL,EAKK,IALL,CAKU,kBAAU;AACZ,YAAI,oBAAJ;AACA,eAAO,OAAO,iBAAP,CAAyB,WAAzB,CAAP;AACH,KARL,EASK,IATL,CASU,mBAAW;AACb,YAAI,2BAAJ;AACA;AACA,eAAO,QAAQ,iBAAR,CAA0B,kBAA1B,CAAP;AACH,KAbL,EAcK,IAdL,CAcU,0BAAkB;AACpB,2BAAmB,cAAnB;AACA,eAAO,iBAAiB,kBAAjB,GAAsC,IAAtC,CAA2C,aAAK;AACnD,gBAAI,yBAAJ;AACA,6BAAiB,gBAAjB,CAAkC,4BAAlC,EACI,mBADJ;AAEH,SAJM,CAAP;AAKH,KArBL,EAsBK,KAtBL,CAsBW,iBAAS;AACZ,YAAI,WAAW,KAAf;AACH,KAxBL;AAyBH;;AAED,SAAS,iBAAT,GAA6B;AACzB,QAAI,gBAAJ,EAAsB;AAClB,yBAAiB,iBAAjB,GACK,IADL,CACU,aAAK;AACP,gBAAI,yBAAJ;AACA,6BAAiB,mBAAjB,CAAqC,4BAArC,EACI,mBADJ;AAEH,SALL,EAMK,KANL,CAMW,iBAAS;AACZ,gBAAI,WAAW,KAAf;AACH,SARL;AASH;AACJ;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAAoC;AAChC,QAAI,QAAQ,MAAM,MAAN,CAAa,KAAzB;AACH;;;;AAKG,QAAI,IAAI,MAAM,QAAN,CAAe,CAAf,CAAR;AACA,aAAS,CAAT;AAEH;AACD","file":"ReRideBLEpromises-compiled.js","sourcesContent":["/**\n * Created by sokoler on 04/08/16.\n */\n\n\n\nconst serviceUuid = \"battery_service\";\nconst characteristicUuid =\"battery_level\";\nconst deviceName = \"ReRide\";\n\nvar myCharacteristic;\nvar gauge;\n\nfunction initGauge()\n{\n    gauge = new JustGage({\n        id: \"gauge\",\n        value: 0,\n        min: 0,\n        max: 255,\n        title: \"Visitors\"\n    });\n}\n\nfunction setGauge(currentValue)\n{\n    gauge.refresh(currentValue);\n}\n\nfunction onStartButtonClick() {\n\n    log('Requesting Bluetooth Device...');\n    navigator.bluetooth.requestDevice({filters: [{name: deviceName}], optionalServices:[serviceUuid]})\n        .then(device => {\n            log('Connecting to GATT Server...');\n            return device.gatt.connect();\n        })\n        .then(server => {\n            log('Getting Service...');\n            return server.getPrimaryService(serviceUuid);\n        })\n        .then(service => {\n            log('Getting Characteristic...');\n            //tst = service.getCharacteristic(characteristicUuid);\n            return service.getCharacteristic(characteristicUuid);\n        })\n        .then(characteristic => {\n            myCharacteristic = characteristic;\n            return myCharacteristic.startNotifications().then(_ => {\n                log('> Notifications started');\n                myCharacteristic.addEventListener('characteristicvaluechanged',\n                    handleNotifications);\n            });\n        })\n        .catch(error => {\n            log('Argh! ' + error);\n        });\n}\n\nfunction onStopButtonClick() {\n    if (myCharacteristic) {\n        myCharacteristic.stopNotifications()\n            .then(_ => {\n                log('> Notifications stopped');\n                myCharacteristic.removeEventListener('characteristicvaluechanged',\n                    handleNotifications);\n            })\n            .catch(error => {\n                log('Argh! ' + error);\n            });\n    }\n}\n\nfunction handleNotifications(event) {\n    let value = event.target.value;\n /*   let b = value.getUint8(0).toString();\n\n    // now do stuff with the data received !\n    log('> ' + b);\n */\n    let x = value.getUint8(0);\n    setGauge(x);\n\n}\ninitGauge();"]}